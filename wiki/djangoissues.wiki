=Django Issues=

There are some known problems with the Django admin-interface. I´m going to list them here in order to avoid confusion (because the problems are not related to Grappelli whatsoever). See also: http://code.djangoproject.com/wiki/DjangoDesign

If you think there´s something missing here (or if an Issue has been resolved), please drop me an email.

==Reordering Edit-Inlines==

Because in case of errors, formsets are not returned in the right order, reordering inlines is currently not possible.<br>
_(Solution seems to be coming ... somewhere.)_

see http://code.djangoproject.com/ticket/14238

==Translating App Names==

It´s not possible to translate the names of apps within the admin-interface which leads to a strange language mix (esp. on the index page).<br>
_(There´s already a ticket but IMHO it does not solve the problem.)_

==The Admin Index Site==

Currently, the admin index site reflects the structure of your applications/models. We don´t think editors (who use the admin site) are interested in the structure of your project/applications. What they want is the most reasonable list of models, divided into different sections (not necessarily apps).<br>
_(Solved with Grappelli ... but still looking for a better way to handle this issue.)_

==Admin Site Objects and Related Lookups==

If you use different Admin Site Objects, you have to register _every_ related model within _every_ site object you want to use that model for. Grappelli assumes that you registered _all_ models with your main adminsite.<br>
_(This is not considered an issue by the django developers.)_

==Searching Generic Relations==

It´s not possible to use a "content_object" within the search_fields. As far as I know, there´s no workaround.<br>
_(I´m not sure if this will be solved.)_

==Messages in Admin==

It´s currently not possible to distinguish between Success- and Error-Messages.
_(Solved with Grappelli.)_

==M2M RawID Field has no Unicode representation==

see http://code.djangoproject.com/ticket/10293 ... the Patch provided there does work.

== Popups, Actions and list_editables==

With the current version of Django, Actions are visible within popups but delete confirmation doesn´t handle popups correctly. Moreover, list_editables are also visible. From our point of view, editing elements shouldn´t be possible with popups (and hasn´t been before actions are introduced).

see http://code.djangoproject.com/ticket/11700

== Admin Documentation==

The document structure of the admin_doc templates is a bit messy (about every second template has a different structure). Therefore, it´s hard to style these pages. Trying to do our best to give it a decent look though.

Moreover, all admin-views lead to an error.

== Admin Documentation: Translation==

Translation of the Admin Documentation is half-baked.

== !ModelAdmin Media Definitions==

There´s no distinction between Media for Change-Forms and Media for the Changelist. If you define to load TinyMCE within your Model, it´s already loaded in the Changelist. The same goes for Stylesheets.

We think there should be distinctive Media-Classes for Change-Form and Changelist. Although it´s not _that_ important, because the javascripts & stylesheets are in your browser-cache anyway.

== Harcoded Stuff==

With "Hardcoded Stuff", I´m referring to HTML-Code within Views (instead of using Templates). There´s a lot of this within the Admin-Interface and therefore it´s just not possible to style some elements.<br>
(Solved with Grappelli ... to be released soon.)

== HTML/CSS Framework ==

For the Admin-Interface to be customizable, flexible and extensible, we need a coherent scheme with either HTML and CSS. If one wants to customize the change-form for example, it shouldn´t be like "ok, let´s add a new block ... let me think ... there´s no class for what I want ... so let´s just add a new class". instead it should be like "ok, let´s add a new block ... I´m checking the HTML/CSS docs ... finding the right class ... done."
otherwise, almost every 3rd-party app using the admin-interface ends up with custom styles and code-blocks.<br>
_(Solved with Grappelli ... to be released soon.)_